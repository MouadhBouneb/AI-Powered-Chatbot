
services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-chatbot-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - ai-chatbot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Ollama AI Service
  ollama:
    image: ollama/ollama:latest
    container_name: ai-chatbot-ollama
    restart: unless-stopped
    # Uncomment below for GPU acceleration (requires NVIDIA GPU + nvidia-container-toolkit)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_NUM_THREADS=${OLLAMA_NUM_THREADS:-8}
      - OLLAMA_MAX_LOADED_MODELS=3
      - OLLAMA_KEEP_ALIVE=5m
    networks:
      - ai-chatbot-network
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "11434:11434"

  # Backend API (using SQLite database)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: ai-chatbot-backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "4000:4000"
    depends_on:
      redis:
        condition: service_healthy
      ollama:
        condition: service_healthy
    volumes:
      - sqlite_data:/app/data
    networks:
      - ai-chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./AI-Chatbot
      dockerfile: Dockerfile
      target: production
      args:
        VITE_API_URL: http://localhost:4000/api
    container_name: ai-chatbot-frontend
    restart: unless-stopped
    env_file:
      - ./AI-Chatbot/.env
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - ai-chatbot-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ai-chatbot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - ai-chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
  sqlite_data:
    driver: local
  ollama_data:
    driver: local

networks:
  ai-chatbot-network:
    driver: bridge